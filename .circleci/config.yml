# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.7

#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       - run:
#           name: install dependencies
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install --upgrade pip
#             pip install -r pollsapp/requirements.txt

#       - run:
#           name: run tests
#           command: |
#             . venv/bin/activate
#             cd pollsapp
#             python3 manage.py test
#             coverage run --source="." manage.py test
#             coverage report


#       # - store_artifacts:
#       #     path: test-reports
#       #     destination: test-reports

#       - run:
#           name: init .pypirc
#           command: |
#             echo -e "[pypi]" >> ~/.pypirc
#             echo -e "username = samsonmuoki" >> ~/.pypirc
#             echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
#       - run:
#           name: create packages
#           command: |
#             python setup.py sdist
#       - run:
#           name: upload to pypi
#           command: |
#             . venv/bin/activate
            
#             twine upload --skip-existing ./dist/*

      # - run:
      #     name: deploy to server
      #     command: "./deployment/deploy.sh"
      #     filters:
      #       branches:
      #         only: master
  
  # deploy: 
  #   requires:
  #     - build
  #   filters:
  #     branches:
  #       only: master

  version: 2
  jobs:
    # build-job:
    build:
      docker:
        - image: circleci/python:3.7

        # documented at https://circleci.com/docs/2.0/circleci-images/
        # - image: circleci/postgres:9.4

      working_directory: ~/repo

      steps:
        - checkout

        - run:
            name: install dependencies
            command: |
              python3 -m venv venv
              . venv/bin/activate
              pip install --upgrade pip
              pip install -r pollsapp/requirements.txt

        - run:
            name: run tests
            command: |
              . venv/bin/activate
              cd pollsapp
              python3 manage.py test
              coverage run --source="." manage.py test
              coverage report


        # - store_artifacts:
        #     path: test-reports
        #     destination: test-reports

        - run:
            name: init .pypirc
            command: |
              echo -e "[pypi]" >> ~/.pypirc
              echo -e "username = samsonmuoki" >> ~/.pypirc
              echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
        - run:
            name: create packages
            command: |
              python setup.py sdist
        - run:
            name: upload to pypi
            command: |
              . venv/bin/activate
              
              twine upload --skip-existing ./dist/*

        - add_ssh_keys:
            fingerprints:
                # - "SHA256:uJ1wen9MWu9tGNYvCHcPI+7/Nog/43GetbHrI7o7zuU"
                - "f1:76:70:86:e5:4d:12:a4:9a:0e:10:a8:21:c4:21:8d"
   
   
        - run:
            name: Deploy to GCE
            command: yes | ./deployment/deploy.sh
                
                
                

#     deploy:
#       docker:
#         - image: circleci/python:3.7
#       working_directory: ~/repo
#       steps:
#         - add_ssh_keys
#         # - run:
#         #     name: Deploy to GCE
#         #     command: |
#         #         cd deployment
#         #         ./deploy.sh
    
#   workflows:
#     version: 2
#     build-deploy:
#       jobs:
#         - build
#         - deploy:
#             requires:
#               - build
#             filters:
#               branches:
#                 only: master