# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.7

#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       - run:
#           name: install dependencies
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install --upgrade pip
#             pip install -r pollsapp/requirements.txt

#       - run:
#           name: run tests
#           command: |
#             . venv/bin/activate
#             cd pollsapp
#             python3 manage.py test
#             coverage run --source="." manage.py test
#             coverage report


#       # - store_artifacts:
#       #     path: test-reports
#       #     destination: test-reports

#       - run:
#           name: init .pypirc
#           command: |
#             echo -e "[pypi]" >> ~/.pypirc
#             echo -e "username = samsonmuoki" >> ~/.pypirc
#             echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
#       - run:
#           name: create packages
#           command: |
#             python setup.py sdist
#       - run:
#           name: upload to pypi
#           command: |
#             . venv/bin/activate
            
#             twine upload --skip-existing ./dist/*

      # - run:
      #     name: deploy to server
      #     command: "./deployment/deploy.sh"
      #     filters:
      #       branches:
      #         only: master
  
  # deploy: 
  #   requires:
  #     - build
  #   filters:
  #     branches:
  #       only: master

  version: 2
  jobs:
    # build-job:
    build:
      docker:
        - image: circleci/python:3.7
          environment:
                ANSIBLE_HOST_KEY_CHECKING: "no"
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # - image: circleci/postgres:9.4

      working_directory: ~/repo

      # branches:
      #   only:
      #     - master

      steps:
        - checkout

        - run:
            name: install dependencies
            command: |
              python3 -m venv venv
              . venv/bin/activate
              pip install --upgrade pip
              pip install -r pollsapp/requirements.txt

        - run:
            name: run tests
            command: |
              . venv/bin/activate
              cd pollsapp
              python3 manage.py test
              coverage run --source="." manage.py test
              coverage report


        # - store_artifacts:
        #     path: test-reports
        #     destination: test-reports

        - run:
            name: init .pypirc
            command: |
              echo -e "[pypi]" >> ~/.pypirc
              echo -e "username = samsonmuoki" >> ~/.pypirc
              echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
        - run:
            name: create packages
            command: |
              python setup.py sdist
        - run:
            name: upload to pypi
            command: |
              . venv/bin/activate
              
              twine upload --skip-existing ./dist/*

        - add_ssh_keys:
            fingerprints:
                - "8e:51:4b:14:06:44:dc:20:d2:ae:6f:4d:be:39:21:07"
   
   
        # - run:
        #     name: Deploy to GCE
        #     # command: ./deployment/deploy.sh yes
        #     shell: ./deployment/deploy.sh yes
        - run:
                name: deploy to server
                command: |
                    . venv/bin/activate
                    cd pollsapp/ansible
                    ansible-playbook cd_playbook.yml -i hosts.yml
                
    deploy:
      docker:
        - image: circleci/python:3.7
      working_directory: ~/repo
      steps:
        # - add_ssh_keys
        - run:
            name: Deploy to GCE
            command: |
                . venv/bin/activate
                cd pollsapp/ansible
                ansible-playbook cd_playbook.yml hosts.yml
    
  workflows:
    version: 2
    build-deploy:
      jobs:
        - build
        - deploy:
            requires:
              - build
            filters:
              branches:
                only: master